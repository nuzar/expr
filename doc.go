/*
条件表达式支持的数据类型
数字 `123`
字符串 `"12ab你好"`
布尔值 `true`, `false`
列表 `["a", "b", "c"]` 列表的元素是数字、字符串或布尔值，元素的类型可以不一致。

条件表达式支持的操作符：
单目运算
`!` 非, 操作对象为数字
`-` 负，操作对象为布尔值

双目运算
`and` 且，操作对象为布尔值
`or` 或，操作对象为布尔值
`==` 等于，支持所有类型
`!=` 不等于，支持所有类型
`>` 大于，支持数字
`>=` 大于等于，支持数字
`<` 小于，支持数字
`<=` 小于等于，支持数字

分组
`()` 支持所有类型，用于控制运算符的优先级

函数调用
`identifier(arg)` 函数可以接收任意多个参数，返回1个值。函数的参数类型和返回值类型要看具体的函数定义

可用的函数包括:
获取已识别的某实体的值
`ner_entities(entity_code)  => [string...]`

示例：
产品类型为面膜，肤质为干性或产品功效为补水
`ner_entities("产品类型") == ["面膜"] and (ner_entities("肤质")==["干性"] or ner_entities("功效")==["补水"])`
*/

package expr
